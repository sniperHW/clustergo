// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

/*
Package testproto is a generated protocol buffer package.

It is generated from these files:
	test.proto
	testrpc.proto

It has these top-level messages:
	Test
	BrocastPingpong
	RPCRequest
	RPCResponse
	RPCPing
	RPCPong
	Hello
	World
*/
package testproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FOO int32

const (
	FOO_X FOO = 17
)

var FOO_name = map[int32]string{
	17: "X",
}
var FOO_value = map[string]int32{
	"X": 17,
}

func (x FOO) Enum() *FOO {
	p := new(FOO)
	*p = x
	return p
}
func (x FOO) String() string {
	return proto.EnumName(FOO_name, int32(x))
}
func (x *FOO) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FOO_value, data, "FOO")
	if err != nil {
		return err
	}
	*x = FOO(value)
	return nil
}
func (FOO) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Test struct {
	A                *string `protobuf:"bytes,1,req,name=a" json:"a,omitempty"`
	B                *int32  `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
	C                []int64 `protobuf:"varint,3,rep,name=c" json:"c,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Test) Reset()                    { *m = Test{} }
func (m *Test) String() string            { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()               {}
func (*Test) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Test) GetA() string {
	if m != nil && m.A != nil {
		return *m.A
	}
	return ""
}

func (m *Test) GetB() int32 {
	if m != nil && m.B != nil {
		return *m.B
	}
	return 0
}

func (m *Test) GetC() []int64 {
	if m != nil {
		return m.C
	}
	return nil
}

type BrocastPingpong struct {
	Id               *int64  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Message          *string `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BrocastPingpong) Reset()                    { *m = BrocastPingpong{} }
func (m *BrocastPingpong) String() string            { return proto.CompactTextString(m) }
func (*BrocastPingpong) ProtoMessage()               {}
func (*BrocastPingpong) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BrocastPingpong) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BrocastPingpong) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Test)(nil), "testproto.Test")
	proto.RegisterType((*BrocastPingpong)(nil), "testproto.BrocastPingpong")
	proto.RegisterEnum("testproto.FOO", FOO_name, FOO_value)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0xb1, 0xc1, 0x4c, 0x25, 0x03, 0x2e, 0x96,
	0x90, 0xd4, 0xe2, 0x12, 0x21, 0x1e, 0x2e, 0xc6, 0x44, 0x09, 0x46, 0x05, 0x26, 0x0d, 0xce, 0x20,
	0xc6, 0x44, 0x10, 0x2f, 0x49, 0x82, 0x49, 0x81, 0x51, 0x83, 0x35, 0x88, 0x31, 0x09, 0xc4, 0x4b,
	0x96, 0x60, 0x56, 0x60, 0xd6, 0x60, 0x0e, 0x62, 0x4c, 0x56, 0xb2, 0xe6, 0xe2, 0x77, 0x2a, 0xca,
	0x4f, 0x4e, 0x2c, 0x2e, 0x09, 0xc8, 0xcc, 0x4b, 0x2f, 0xc8, 0xcf, 0x4b, 0x17, 0xe2, 0xe3, 0x62,
	0xca, 0x4c, 0x01, 0xeb, 0x66, 0x0e, 0x62, 0xca, 0x4c, 0x11, 0x92, 0xe0, 0x62, 0xcf, 0x4d, 0x2d,
	0x2e, 0x4e, 0x4c, 0x4f, 0x95, 0x60, 0x02, 0x1b, 0x09, 0xe3, 0x6a, 0xf1, 0x70, 0x31, 0xbb, 0xf9,
	0xfb, 0x0b, 0xb1, 0x72, 0x31, 0x46, 0x08, 0x08, 0x02, 0x02, 0x00, 0x00, 0xff, 0xff, 0x78, 0xb7,
	0x12, 0x36, 0x94, 0x00, 0x00, 0x00,
}
