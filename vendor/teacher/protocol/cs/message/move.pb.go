// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/move.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MoveToS struct {
	Pos                  *Position `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	Angle                *int32    `protobuf:"varint,2,opt,name=angle" json:"angle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MoveToS) Reset()         { *m = MoveToS{} }
func (m *MoveToS) String() string { return proto.CompactTextString(m) }
func (*MoveToS) ProtoMessage()    {}
func (*MoveToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d614d27b81f301, []int{0}
}

func (m *MoveToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveToS.Unmarshal(m, b)
}
func (m *MoveToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveToS.Marshal(b, m, deterministic)
}
func (m *MoveToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveToS.Merge(m, src)
}
func (m *MoveToS) XXX_Size() int {
	return xxx_messageInfo_MoveToS.Size(m)
}
func (m *MoveToS) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveToS.DiscardUnknown(m)
}

var xxx_messageInfo_MoveToS proto.InternalMessageInfo

func (m *MoveToS) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *MoveToS) GetAngle() int32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return 0
}

type MoveToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveToC) Reset()         { *m = MoveToC{} }
func (m *MoveToC) String() string { return proto.CompactTextString(m) }
func (*MoveToC) ProtoMessage()    {}
func (*MoveToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d614d27b81f301, []int{1}
}

func (m *MoveToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveToC.Unmarshal(m, b)
}
func (m *MoveToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveToC.Marshal(b, m, deterministic)
}
func (m *MoveToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveToC.Merge(m, src)
}
func (m *MoveToC) XXX_Size() int {
	return xxx_messageInfo_MoveToC.Size(m)
}
func (m *MoveToC) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveToC.DiscardUnknown(m)
}

var xxx_messageInfo_MoveToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MoveToS)(nil), "message.move_toS")
	proto.RegisterType((*MoveToC)(nil), "message.move_toC")
}

func init() { proto.RegisterFile("cs/proto/message/move.proto", fileDescriptor_52d614d27b81f301) }

var fileDescriptor_52d614d27b81f301 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0xcf, 0xcd, 0x2f,
	0x4b, 0xd5, 0x03, 0x0b, 0x09, 0xb1, 0x43, 0xc5, 0xa4, 0x64, 0x31, 0x54, 0x25, 0xe7, 0xe7, 0xe6,
	0xe6, 0xe7, 0x41, 0xd4, 0x29, 0xb9, 0x72, 0x71, 0x80, 0x74, 0xc5, 0x97, 0xe4, 0x07, 0x0b, 0x29,
	0x73, 0x31, 0x17, 0xe4, 0x17, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x09, 0xea, 0x41, 0xd5,
	0xeb, 0x05, 0xe4, 0x17, 0x67, 0x96, 0x64, 0xe6, 0xe7, 0x05, 0x81, 0x64, 0x85, 0x44, 0xb8, 0x58,
	0x13, 0xf3, 0xd2, 0x73, 0x52, 0x25, 0x98, 0x14, 0x18, 0x35, 0x58, 0x83, 0x20, 0x1c, 0x25, 0x2e,
	0xb8, 0x31, 0xce, 0x4e, 0xb2, 0x51, 0xd2, 0x25, 0xa9, 0x89, 0xc9, 0x19, 0xa9, 0x45, 0x10, 0x8b,
	0x93, 0xf3, 0x73, 0xf4, 0x93, 0x8b, 0x61, 0xd6, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x1f,
	0x9d, 0x31, 0xb7, 0x00, 0x00, 0x00,
}
