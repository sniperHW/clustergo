// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/equipSkillReplace.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EquipSkillReplaceToS struct {
	EquipID              *uint32  `protobuf:"varint,1,req,name=equipID" json:"equipID,omitempty"`
	Order                *int32   `protobuf:"varint,2,req,name=order" json:"order,omitempty"`
	IsReplace            *bool    `protobuf:"varint,3,req,name=isReplace" json:"isReplace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipSkillReplaceToS) Reset()         { *m = EquipSkillReplaceToS{} }
func (m *EquipSkillReplaceToS) String() string { return proto.CompactTextString(m) }
func (*EquipSkillReplaceToS) ProtoMessage()    {}
func (*EquipSkillReplaceToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_79848f197bceb5d5, []int{0}
}

func (m *EquipSkillReplaceToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipSkillReplaceToS.Unmarshal(m, b)
}
func (m *EquipSkillReplaceToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipSkillReplaceToS.Marshal(b, m, deterministic)
}
func (m *EquipSkillReplaceToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipSkillReplaceToS.Merge(m, src)
}
func (m *EquipSkillReplaceToS) XXX_Size() int {
	return xxx_messageInfo_EquipSkillReplaceToS.Size(m)
}
func (m *EquipSkillReplaceToS) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipSkillReplaceToS.DiscardUnknown(m)
}

var xxx_messageInfo_EquipSkillReplaceToS proto.InternalMessageInfo

func (m *EquipSkillReplaceToS) GetEquipID() uint32 {
	if m != nil && m.EquipID != nil {
		return *m.EquipID
	}
	return 0
}

func (m *EquipSkillReplaceToS) GetOrder() int32 {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return 0
}

func (m *EquipSkillReplaceToS) GetIsReplace() bool {
	if m != nil && m.IsReplace != nil {
		return *m.IsReplace
	}
	return false
}

type EquipSkillReplaceToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipSkillReplaceToC) Reset()         { *m = EquipSkillReplaceToC{} }
func (m *EquipSkillReplaceToC) String() string { return proto.CompactTextString(m) }
func (*EquipSkillReplaceToC) ProtoMessage()    {}
func (*EquipSkillReplaceToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_79848f197bceb5d5, []int{1}
}

func (m *EquipSkillReplaceToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipSkillReplaceToC.Unmarshal(m, b)
}
func (m *EquipSkillReplaceToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipSkillReplaceToC.Marshal(b, m, deterministic)
}
func (m *EquipSkillReplaceToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipSkillReplaceToC.Merge(m, src)
}
func (m *EquipSkillReplaceToC) XXX_Size() int {
	return xxx_messageInfo_EquipSkillReplaceToC.Size(m)
}
func (m *EquipSkillReplaceToC) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipSkillReplaceToC.DiscardUnknown(m)
}

var xxx_messageInfo_EquipSkillReplaceToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EquipSkillReplaceToS)(nil), "message.equipSkillReplace_toS")
	proto.RegisterType((*EquipSkillReplaceToC)(nil), "message.equipSkillReplace_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/equipSkillReplace.proto", fileDescriptor_79848f197bceb5d5)
}

var fileDescriptor_79848f197bceb5d5 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x48, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x4f, 0x2d, 0x2c,
	0xcd, 0x2c, 0x08, 0xce, 0xce, 0xcc, 0xc9, 0x09, 0x4a, 0x2d, 0xc8, 0x49, 0x4c, 0x4e, 0xd5, 0x03,
	0xcb, 0x0b, 0xb1, 0x43, 0x15, 0x28, 0xa5, 0x72, 0x89, 0x62, 0xa8, 0x89, 0x2f, 0xc9, 0x0f, 0x16,
	0x92, 0xe0, 0x62, 0x07, 0x4b, 0x78, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x69, 0xf0, 0x06, 0xc1, 0xb8,
	0x42, 0x22, 0x5c, 0xac, 0xf9, 0x45, 0x29, 0xa9, 0x45, 0x12, 0x4c, 0x0a, 0x4c, 0x1a, 0xac, 0x41,
	0x10, 0x8e, 0x90, 0x0c, 0x17, 0x67, 0x66, 0x31, 0xd4, 0x00, 0x09, 0x66, 0x05, 0x26, 0x0d, 0x8e,
	0x20, 0x84, 0x80, 0x92, 0x38, 0x76, 0x6b, 0x9c, 0x9d, 0x64, 0xa3, 0xa4, 0x4b, 0x52, 0x13, 0x93,
	0x33, 0x52, 0x8b, 0x20, 0x2e, 0x4f, 0xce, 0xcf, 0xd1, 0x4f, 0x2e, 0x86, 0xb9, 0x1f, 0x10, 0x00,
	0x00, 0xff, 0xff, 0xdf, 0xe1, 0xad, 0x62, 0xd2, 0x00, 0x00, 0x00,
}
