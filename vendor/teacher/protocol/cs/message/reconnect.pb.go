// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/reconnect.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReconnectToS struct {
	UserID               *string  `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	Token                *string  `protobuf:"bytes,2,req,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReconnectToS) Reset()         { *m = ReconnectToS{} }
func (m *ReconnectToS) String() string { return proto.CompactTextString(m) }
func (*ReconnectToS) ProtoMessage()    {}
func (*ReconnectToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4a5b84c1c57dcc, []int{0}
}

func (m *ReconnectToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReconnectToS.Unmarshal(m, b)
}
func (m *ReconnectToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReconnectToS.Marshal(b, m, deterministic)
}
func (m *ReconnectToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReconnectToS.Merge(m, src)
}
func (m *ReconnectToS) XXX_Size() int {
	return xxx_messageInfo_ReconnectToS.Size(m)
}
func (m *ReconnectToS) XXX_DiscardUnknown() {
	xxx_messageInfo_ReconnectToS.DiscardUnknown(m)
}

var xxx_messageInfo_ReconnectToS proto.InternalMessageInfo

func (m *ReconnectToS) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *ReconnectToS) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type ReconnectToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReconnectToC) Reset()         { *m = ReconnectToC{} }
func (m *ReconnectToC) String() string { return proto.CompactTextString(m) }
func (*ReconnectToC) ProtoMessage()    {}
func (*ReconnectToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4a5b84c1c57dcc, []int{1}
}

func (m *ReconnectToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReconnectToC.Unmarshal(m, b)
}
func (m *ReconnectToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReconnectToC.Marshal(b, m, deterministic)
}
func (m *ReconnectToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReconnectToC.Merge(m, src)
}
func (m *ReconnectToC) XXX_Size() int {
	return xxx_messageInfo_ReconnectToC.Size(m)
}
func (m *ReconnectToC) XXX_DiscardUnknown() {
	xxx_messageInfo_ReconnectToC.DiscardUnknown(m)
}

var xxx_messageInfo_ReconnectToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ReconnectToS)(nil), "message.reconnect_toS")
	proto.RegisterType((*ReconnectToC)(nil), "message.reconnect_toC")
}

func init() { proto.RegisterFile("cs/proto/message/reconnect.proto", fileDescriptor_fb4a5b84c1c57dcc) }

var fileDescriptor_fb4a5b84c1c57dcc = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x4a, 0x4d,
	0xce, 0xcf, 0xcb, 0x4b, 0x4d, 0x2e, 0xd1, 0x03, 0x8b, 0x0b, 0xb1, 0x43, 0x25, 0x94, 0x6c, 0xb9,
	0x78, 0xe1, 0x72, 0xf1, 0x25, 0xf9, 0xc1, 0x42, 0x62, 0x5c, 0x6c, 0xa5, 0xc5, 0xa9, 0x45, 0x9e,
	0x2e, 0x12, 0x8c, 0x0a, 0x4c, 0x1a, 0x9c, 0x41, 0x50, 0x9e, 0x90, 0x08, 0x17, 0x6b, 0x49, 0x7e,
	0x76, 0x6a, 0x9e, 0x04, 0x13, 0x58, 0x18, 0xc2, 0x51, 0xe2, 0x47, 0xd5, 0xee, 0xec, 0x24, 0x1b,
	0x25, 0x5d, 0x92, 0x9a, 0x98, 0x9c, 0x91, 0x5a, 0x04, 0x71, 0x41, 0x72, 0x7e, 0x8e, 0x7e, 0x72,
	0x31, 0xcc, 0x1d, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0xa1, 0x9e, 0x2c, 0x9a, 0x00, 0x00,
	0x00,
}
