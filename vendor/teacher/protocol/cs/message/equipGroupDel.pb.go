// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/equipGroupDel.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EquipGroupDelToS struct {
	GroupID              *int32   `protobuf:"varint,1,req,name=groupID" json:"groupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipGroupDelToS) Reset()         { *m = EquipGroupDelToS{} }
func (m *EquipGroupDelToS) String() string { return proto.CompactTextString(m) }
func (*EquipGroupDelToS) ProtoMessage()    {}
func (*EquipGroupDelToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab81b5897965a74, []int{0}
}

func (m *EquipGroupDelToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipGroupDelToS.Unmarshal(m, b)
}
func (m *EquipGroupDelToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipGroupDelToS.Marshal(b, m, deterministic)
}
func (m *EquipGroupDelToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipGroupDelToS.Merge(m, src)
}
func (m *EquipGroupDelToS) XXX_Size() int {
	return xxx_messageInfo_EquipGroupDelToS.Size(m)
}
func (m *EquipGroupDelToS) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipGroupDelToS.DiscardUnknown(m)
}

var xxx_messageInfo_EquipGroupDelToS proto.InternalMessageInfo

func (m *EquipGroupDelToS) GetGroupID() int32 {
	if m != nil && m.GroupID != nil {
		return *m.GroupID
	}
	return 0
}

type EquipGroupDelToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipGroupDelToC) Reset()         { *m = EquipGroupDelToC{} }
func (m *EquipGroupDelToC) String() string { return proto.CompactTextString(m) }
func (*EquipGroupDelToC) ProtoMessage()    {}
func (*EquipGroupDelToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab81b5897965a74, []int{1}
}

func (m *EquipGroupDelToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipGroupDelToC.Unmarshal(m, b)
}
func (m *EquipGroupDelToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipGroupDelToC.Marshal(b, m, deterministic)
}
func (m *EquipGroupDelToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipGroupDelToC.Merge(m, src)
}
func (m *EquipGroupDelToC) XXX_Size() int {
	return xxx_messageInfo_EquipGroupDelToC.Size(m)
}
func (m *EquipGroupDelToC) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipGroupDelToC.DiscardUnknown(m)
}

var xxx_messageInfo_EquipGroupDelToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EquipGroupDelToS)(nil), "message.equipGroupDel_toS")
	proto.RegisterType((*EquipGroupDelToC)(nil), "message.equipGroupDel_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/equipGroupDel.proto", fileDescriptor_eab81b5897965a74)
}

var fileDescriptor_eab81b5897965a74 = []byte{
	// 117 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x49, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x4f, 0x2d, 0x2c,
	0xcd, 0x2c, 0x70, 0x2f, 0xca, 0x2f, 0x2d, 0x70, 0x49, 0xcd, 0xd1, 0x03, 0xcb, 0x09, 0xb1, 0x43,
	0x25, 0x95, 0x74, 0xb9, 0x04, 0x51, 0xe4, 0xe3, 0x4b, 0xf2, 0x83, 0x85, 0x24, 0xb8, 0xd8, 0xd3,
	0x41, 0x7c, 0x4f, 0x17, 0x09, 0x46, 0x05, 0x26, 0x0d, 0xd6, 0x20, 0x18, 0x57, 0x49, 0x18, 0x53,
	0xb9, 0xb3, 0x93, 0x6c, 0x94, 0x74, 0x49, 0x6a, 0x62, 0x72, 0x46, 0x6a, 0x11, 0xc4, 0xe6, 0xe4,
	0xfc, 0x1c, 0xfd, 0xe4, 0x62, 0x98, 0xfd, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x0e, 0xd5,
	0xf6, 0x92, 0x00, 0x00, 0x00,
}
