// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/equipDemount.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EquipDemountToS struct {
	EquipID              []uint32 `protobuf:"varint,1,rep,name=equipID" json:"equipID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipDemountToS) Reset()         { *m = EquipDemountToS{} }
func (m *EquipDemountToS) String() string { return proto.CompactTextString(m) }
func (*EquipDemountToS) ProtoMessage()    {}
func (*EquipDemountToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4b72656b2dfe8b, []int{0}
}

func (m *EquipDemountToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipDemountToS.Unmarshal(m, b)
}
func (m *EquipDemountToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipDemountToS.Marshal(b, m, deterministic)
}
func (m *EquipDemountToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipDemountToS.Merge(m, src)
}
func (m *EquipDemountToS) XXX_Size() int {
	return xxx_messageInfo_EquipDemountToS.Size(m)
}
func (m *EquipDemountToS) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipDemountToS.DiscardUnknown(m)
}

var xxx_messageInfo_EquipDemountToS proto.InternalMessageInfo

func (m *EquipDemountToS) GetEquipID() []uint32 {
	if m != nil {
		return m.EquipID
	}
	return nil
}

type EquipDemountToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipDemountToC) Reset()         { *m = EquipDemountToC{} }
func (m *EquipDemountToC) String() string { return proto.CompactTextString(m) }
func (*EquipDemountToC) ProtoMessage()    {}
func (*EquipDemountToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4b72656b2dfe8b, []int{1}
}

func (m *EquipDemountToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipDemountToC.Unmarshal(m, b)
}
func (m *EquipDemountToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipDemountToC.Marshal(b, m, deterministic)
}
func (m *EquipDemountToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipDemountToC.Merge(m, src)
}
func (m *EquipDemountToC) XXX_Size() int {
	return xxx_messageInfo_EquipDemountToC.Size(m)
}
func (m *EquipDemountToC) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipDemountToC.DiscardUnknown(m)
}

var xxx_messageInfo_EquipDemountToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EquipDemountToS)(nil), "message.equipDemount_toS")
	proto.RegisterType((*EquipDemountToC)(nil), "message.equipDemount_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/equipDemount.proto", fileDescriptor_4e4b72656b2dfe8b)
}

var fileDescriptor_4e4b72656b2dfe8b = []byte{
	// 115 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4e, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x4f, 0x2d, 0x2c,
	0xcd, 0x2c, 0x70, 0x49, 0xcd, 0xcd, 0x2f, 0xcd, 0x2b, 0xd1, 0x03, 0x4b, 0x09, 0xb1, 0x43, 0xe5,
	0x94, 0x74, 0xb8, 0x04, 0x90, 0xa5, 0xe3, 0x4b, 0xf2, 0x83, 0x85, 0x24, 0xb8, 0xd8, 0xc1, 0x62,
	0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xbc, 0x41, 0x30, 0xae, 0x92, 0x10, 0x86, 0x6a, 0x67,
	0x27, 0xd9, 0x28, 0xe9, 0x92, 0xd4, 0xc4, 0xe4, 0x8c, 0xd4, 0x22, 0x88, 0xb5, 0xc9, 0xf9, 0x39,
	0xfa, 0xc9, 0xc5, 0x30, 0xcb, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x71, 0x28, 0x17, 0xb8, 0x8f,
	0x00, 0x00, 0x00,
}
