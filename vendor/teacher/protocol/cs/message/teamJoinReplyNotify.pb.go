// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/teamJoinReplyNotify.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TeamJoinReplyNotifyToS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamJoinReplyNotifyToS) Reset()         { *m = TeamJoinReplyNotifyToS{} }
func (m *TeamJoinReplyNotifyToS) String() string { return proto.CompactTextString(m) }
func (*TeamJoinReplyNotifyToS) ProtoMessage()    {}
func (*TeamJoinReplyNotifyToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_660ef8b116ea0d95, []int{0}
}

func (m *TeamJoinReplyNotifyToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamJoinReplyNotifyToS.Unmarshal(m, b)
}
func (m *TeamJoinReplyNotifyToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamJoinReplyNotifyToS.Marshal(b, m, deterministic)
}
func (m *TeamJoinReplyNotifyToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamJoinReplyNotifyToS.Merge(m, src)
}
func (m *TeamJoinReplyNotifyToS) XXX_Size() int {
	return xxx_messageInfo_TeamJoinReplyNotifyToS.Size(m)
}
func (m *TeamJoinReplyNotifyToS) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamJoinReplyNotifyToS.DiscardUnknown(m)
}

var xxx_messageInfo_TeamJoinReplyNotifyToS proto.InternalMessageInfo

type TeamJoinReplyNotifyToC struct {
	TeamID               *uint32  `protobuf:"varint,1,opt,name=teamID" json:"teamID,omitempty"`
	Agree                *bool    `protobuf:"varint,2,opt,name=agree" json:"agree,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamJoinReplyNotifyToC) Reset()         { *m = TeamJoinReplyNotifyToC{} }
func (m *TeamJoinReplyNotifyToC) String() string { return proto.CompactTextString(m) }
func (*TeamJoinReplyNotifyToC) ProtoMessage()    {}
func (*TeamJoinReplyNotifyToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_660ef8b116ea0d95, []int{1}
}

func (m *TeamJoinReplyNotifyToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamJoinReplyNotifyToC.Unmarshal(m, b)
}
func (m *TeamJoinReplyNotifyToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamJoinReplyNotifyToC.Marshal(b, m, deterministic)
}
func (m *TeamJoinReplyNotifyToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamJoinReplyNotifyToC.Merge(m, src)
}
func (m *TeamJoinReplyNotifyToC) XXX_Size() int {
	return xxx_messageInfo_TeamJoinReplyNotifyToC.Size(m)
}
func (m *TeamJoinReplyNotifyToC) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamJoinReplyNotifyToC.DiscardUnknown(m)
}

var xxx_messageInfo_TeamJoinReplyNotifyToC proto.InternalMessageInfo

func (m *TeamJoinReplyNotifyToC) GetTeamID() uint32 {
	if m != nil && m.TeamID != nil {
		return *m.TeamID
	}
	return 0
}

func (m *TeamJoinReplyNotifyToC) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

func init() {
	proto.RegisterType((*TeamJoinReplyNotifyToS)(nil), "message.teamJoinReplyNotify_toS")
	proto.RegisterType((*TeamJoinReplyNotifyToC)(nil), "message.teamJoinReplyNotify_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/teamJoinReplyNotify.proto", fileDescriptor_660ef8b116ea0d95)
}

var fileDescriptor_660ef8b116ea0d95 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4a, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x49, 0x4d,
	0xcc, 0xf5, 0xca, 0xcf, 0xcc, 0x0b, 0x4a, 0x2d, 0xc8, 0xa9, 0xf4, 0xcb, 0x2f, 0xc9, 0x4c, 0xab,
	0xd4, 0x03, 0xab, 0x10, 0x62, 0x87, 0x2a, 0x51, 0x92, 0xe4, 0x12, 0xc7, 0xa2, 0x2a, 0xbe, 0x24,
	0x3f, 0x58, 0xc9, 0x1d, 0x97, 0x94, 0xb3, 0x90, 0x18, 0x17, 0x1b, 0x48, 0xca, 0xd3, 0x45, 0x82,
	0x51, 0x81, 0x51, 0x83, 0x37, 0x08, 0xca, 0x13, 0x12, 0xe1, 0x62, 0x4d, 0x4c, 0x2f, 0x4a, 0x4d,
	0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x08, 0x82, 0x70, 0x9c, 0x64, 0xa3, 0xa4, 0x4b, 0x52, 0x13,
	0x93, 0x33, 0x52, 0x8b, 0x20, 0xee, 0x4b, 0xce, 0xcf, 0xd1, 0x4f, 0x2e, 0x86, 0xb9, 0x12, 0x10,
	0x00, 0x00, 0xff, 0xff, 0x19, 0x4a, 0x5d, 0xb0, 0xb8, 0x00, 0x00, 0x00,
}
