// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/serverTime.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerTimeToS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerTimeToS) Reset()         { *m = ServerTimeToS{} }
func (m *ServerTimeToS) String() string { return proto.CompactTextString(m) }
func (*ServerTimeToS) ProtoMessage()    {}
func (*ServerTimeToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_434bcc68935eb9be, []int{0}
}

func (m *ServerTimeToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerTimeToS.Unmarshal(m, b)
}
func (m *ServerTimeToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerTimeToS.Marshal(b, m, deterministic)
}
func (m *ServerTimeToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerTimeToS.Merge(m, src)
}
func (m *ServerTimeToS) XXX_Size() int {
	return xxx_messageInfo_ServerTimeToS.Size(m)
}
func (m *ServerTimeToS) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerTimeToS.DiscardUnknown(m)
}

var xxx_messageInfo_ServerTimeToS proto.InternalMessageInfo

type ServerTimeToC struct {
	PhysTime             *int64   `protobuf:"varint,1,opt,name=physTime" json:"physTime,omitempty"`
	LogicTime            *int64   `protobuf:"varint,2,opt,name=logicTime" json:"logicTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerTimeToC) Reset()         { *m = ServerTimeToC{} }
func (m *ServerTimeToC) String() string { return proto.CompactTextString(m) }
func (*ServerTimeToC) ProtoMessage()    {}
func (*ServerTimeToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_434bcc68935eb9be, []int{1}
}

func (m *ServerTimeToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerTimeToC.Unmarshal(m, b)
}
func (m *ServerTimeToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerTimeToC.Marshal(b, m, deterministic)
}
func (m *ServerTimeToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerTimeToC.Merge(m, src)
}
func (m *ServerTimeToC) XXX_Size() int {
	return xxx_messageInfo_ServerTimeToC.Size(m)
}
func (m *ServerTimeToC) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerTimeToC.DiscardUnknown(m)
}

var xxx_messageInfo_ServerTimeToC proto.InternalMessageInfo

func (m *ServerTimeToC) GetPhysTime() int64 {
	if m != nil && m.PhysTime != nil {
		return *m.PhysTime
	}
	return 0
}

func (m *ServerTimeToC) GetLogicTime() int64 {
	if m != nil && m.LogicTime != nil {
		return *m.LogicTime
	}
	return 0
}

func init() {
	proto.RegisterType((*ServerTimeToS)(nil), "message.serverTime_toS")
	proto.RegisterType((*ServerTimeToC)(nil), "message.serverTime_toC")
}

func init() { proto.RegisterFile("cs/proto/message/serverTime.proto", fileDescriptor_434bcc68935eb9be) }

var fileDescriptor_434bcc68935eb9be = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x4e, 0x2d,
	0x2a, 0x4b, 0x2d, 0x0a, 0xc9, 0xcc, 0x4d, 0xd5, 0x03, 0x4b, 0x08, 0xb1, 0x43, 0x65, 0x94, 0x04,
	0xb8, 0xf8, 0x10, 0x92, 0xf1, 0x25, 0xf9, 0xc1, 0x4a, 0x5e, 0x68, 0x22, 0xce, 0x42, 0x52, 0x5c,
	0x1c, 0x05, 0x19, 0x95, 0xc5, 0x20, 0xbe, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x9c, 0x2f,
	0x24, 0xc3, 0xc5, 0x99, 0x93, 0x9f, 0x9e, 0x99, 0x0c, 0x96, 0x64, 0x02, 0x4b, 0x22, 0x04, 0x9c,
	0x64, 0xa3, 0xa4, 0x4b, 0x52, 0x13, 0x93, 0x33, 0x52, 0x8b, 0x20, 0x0e, 0x4a, 0xce, 0xcf, 0xd1,
	0x4f, 0x2e, 0x86, 0x39, 0x0b, 0x10, 0x00, 0x00, 0xff, 0xff, 0xff, 0x08, 0x62, 0x56, 0xa9, 0x00,
	0x00, 0x00,
}
