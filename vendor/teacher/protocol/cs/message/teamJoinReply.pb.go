// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/teamJoinReply.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TeamJoinReplyToS struct {
	Agree                *bool    `protobuf:"varint,1,opt,name=agree" json:"agree,omitempty"`
	AgreeID              *uint64  `protobuf:"varint,2,opt,name=agreeID" json:"agreeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamJoinReplyToS) Reset()         { *m = TeamJoinReplyToS{} }
func (m *TeamJoinReplyToS) String() string { return proto.CompactTextString(m) }
func (*TeamJoinReplyToS) ProtoMessage()    {}
func (*TeamJoinReplyToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e977294475d22ca7, []int{0}
}

func (m *TeamJoinReplyToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamJoinReplyToS.Unmarshal(m, b)
}
func (m *TeamJoinReplyToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamJoinReplyToS.Marshal(b, m, deterministic)
}
func (m *TeamJoinReplyToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamJoinReplyToS.Merge(m, src)
}
func (m *TeamJoinReplyToS) XXX_Size() int {
	return xxx_messageInfo_TeamJoinReplyToS.Size(m)
}
func (m *TeamJoinReplyToS) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamJoinReplyToS.DiscardUnknown(m)
}

var xxx_messageInfo_TeamJoinReplyToS proto.InternalMessageInfo

func (m *TeamJoinReplyToS) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

func (m *TeamJoinReplyToS) GetAgreeID() uint64 {
	if m != nil && m.AgreeID != nil {
		return *m.AgreeID
	}
	return 0
}

type TeamJoinReplyToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamJoinReplyToC) Reset()         { *m = TeamJoinReplyToC{} }
func (m *TeamJoinReplyToC) String() string { return proto.CompactTextString(m) }
func (*TeamJoinReplyToC) ProtoMessage()    {}
func (*TeamJoinReplyToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_e977294475d22ca7, []int{1}
}

func (m *TeamJoinReplyToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamJoinReplyToC.Unmarshal(m, b)
}
func (m *TeamJoinReplyToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamJoinReplyToC.Marshal(b, m, deterministic)
}
func (m *TeamJoinReplyToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamJoinReplyToC.Merge(m, src)
}
func (m *TeamJoinReplyToC) XXX_Size() int {
	return xxx_messageInfo_TeamJoinReplyToC.Size(m)
}
func (m *TeamJoinReplyToC) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamJoinReplyToC.DiscardUnknown(m)
}

var xxx_messageInfo_TeamJoinReplyToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TeamJoinReplyToS)(nil), "message.teamJoinReply_toS")
	proto.RegisterType((*TeamJoinReplyToC)(nil), "message.teamJoinReply_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/teamJoinReply.proto", fileDescriptor_e977294475d22ca7)
}

var fileDescriptor_e977294475d22ca7 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x49, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x49, 0x4d,
	0xcc, 0xf5, 0xca, 0xcf, 0xcc, 0x0b, 0x4a, 0x2d, 0xc8, 0xa9, 0xd4, 0x03, 0xcb, 0x09, 0xb1, 0x43,
	0x25, 0x95, 0x9c, 0xb9, 0x04, 0x51, 0xe4, 0xe3, 0x4b, 0xf2, 0x83, 0x85, 0x44, 0xb8, 0x58, 0x13,
	0xd3, 0x8b, 0x52, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x82, 0x20, 0x1c, 0x21, 0x09, 0x2e,
	0x76, 0x30, 0xc3, 0xd3, 0x45, 0x82, 0x49, 0x81, 0x51, 0x83, 0x25, 0x08, 0xc6, 0x55, 0x12, 0xc6,
	0x34, 0xc4, 0xd9, 0x49, 0x36, 0x4a, 0xba, 0x24, 0x35, 0x31, 0x39, 0x23, 0xb5, 0x08, 0xe2, 0x9e,
	0xe4, 0xfc, 0x1c, 0xfd, 0xe4, 0x62, 0x98, 0xab, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0x68, 0xb5,
	0xf7, 0xef, 0xa8, 0x00, 0x00, 0x00,
}
