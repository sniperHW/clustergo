// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss/proto/rpc/teamKickPlayer.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	message "github.com/sniperHW/sanguo/protocol/cs/message"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TeamKickPlayerReq struct {
	HeaderID             *uint64  `protobuf:"varint,1,opt,name=headerID" json:"headerID,omitempty"`
	KickID               *uint64  `protobuf:"varint,2,opt,name=kickID" json:"kickID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamKickPlayerReq) Reset()         { *m = TeamKickPlayerReq{} }
func (m *TeamKickPlayerReq) String() string { return proto.CompactTextString(m) }
func (*TeamKickPlayerReq) ProtoMessage()    {}
func (*TeamKickPlayerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f62155bfc21dfad, []int{0}
}

func (m *TeamKickPlayerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamKickPlayerReq.Unmarshal(m, b)
}
func (m *TeamKickPlayerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamKickPlayerReq.Marshal(b, m, deterministic)
}
func (m *TeamKickPlayerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamKickPlayerReq.Merge(m, src)
}
func (m *TeamKickPlayerReq) XXX_Size() int {
	return xxx_messageInfo_TeamKickPlayerReq.Size(m)
}
func (m *TeamKickPlayerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamKickPlayerReq.DiscardUnknown(m)
}

var xxx_messageInfo_TeamKickPlayerReq proto.InternalMessageInfo

func (m *TeamKickPlayerReq) GetHeaderID() uint64 {
	if m != nil && m.HeaderID != nil {
		return *m.HeaderID
	}
	return 0
}

func (m *TeamKickPlayerReq) GetKickID() uint64 {
	if m != nil && m.KickID != nil {
		return *m.KickID
	}
	return 0
}

type TeamKickPlayerResp struct {
	ErrCode              *message.ErrCode `protobuf:"varint,1,opt,name=errCode,enum=message.ErrCode" json:"errCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TeamKickPlayerResp) Reset()         { *m = TeamKickPlayerResp{} }
func (m *TeamKickPlayerResp) String() string { return proto.CompactTextString(m) }
func (*TeamKickPlayerResp) ProtoMessage()    {}
func (*TeamKickPlayerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f62155bfc21dfad, []int{1}
}

func (m *TeamKickPlayerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamKickPlayerResp.Unmarshal(m, b)
}
func (m *TeamKickPlayerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamKickPlayerResp.Marshal(b, m, deterministic)
}
func (m *TeamKickPlayerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamKickPlayerResp.Merge(m, src)
}
func (m *TeamKickPlayerResp) XXX_Size() int {
	return xxx_messageInfo_TeamKickPlayerResp.Size(m)
}
func (m *TeamKickPlayerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamKickPlayerResp.DiscardUnknown(m)
}

var xxx_messageInfo_TeamKickPlayerResp proto.InternalMessageInfo

func (m *TeamKickPlayerResp) GetErrCode() message.ErrCode {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return message.ErrCode_OK
}

func init() {
	proto.RegisterType((*TeamKickPlayerReq)(nil), "rpc.teamKickPlayer_req")
	proto.RegisterType((*TeamKickPlayerResp)(nil), "rpc.teamKickPlayer_resp")
}

func init() { proto.RegisterFile("ss/proto/rpc/teamKickPlayer.proto", fileDescriptor_2f62155bfc21dfad) }

var fileDescriptor_2f62155bfc21dfad = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2c, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x49, 0x4d, 0xcc, 0xf5, 0xce, 0x4c,
	0xce, 0x0e, 0xc8, 0x49, 0xac, 0x4c, 0x2d, 0xd2, 0x03, 0x4b, 0x08, 0x31, 0x17, 0x15, 0x24, 0x4b,
	0xc9, 0x27, 0xc3, 0xd4, 0xe5, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0xea, 0xa7, 0x16, 0x15, 0xa5,
	0x16, 0x15, 0xe5, 0x43, 0x55, 0x29, 0x79, 0x70, 0x09, 0xa1, 0xea, 0x8e, 0x2f, 0x4a, 0x2d, 0x14,
	0x92, 0xe2, 0xe2, 0xc8, 0x48, 0x4d, 0x4c, 0x49, 0x2d, 0xf2, 0x74, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0x60, 0x09, 0x82, 0xf3, 0x85, 0xc4, 0xb8, 0xd8, 0xb2, 0x33, 0x93, 0xb3, 0x3d, 0x5d, 0x24, 0x98,
	0xc0, 0x32, 0x50, 0x9e, 0x92, 0x23, 0x97, 0x30, 0x86, 0x49, 0xc5, 0x05, 0x42, 0x5a, 0x5c, 0xec,
	0xa9, 0x45, 0x45, 0xce, 0xf9, 0x29, 0xa9, 0x60, 0x93, 0xf8, 0x8c, 0x04, 0xf4, 0xa0, 0x4e, 0xd1,
	0x73, 0x85, 0x88, 0x07, 0xc1, 0x14, 0x38, 0x49, 0x46, 0x89, 0x97, 0xa4, 0x26, 0x26, 0x67, 0xa4,
	0x16, 0x41, 0x1c, 0x9d, 0x9c, 0x9f, 0xa3, 0x5f, 0x5c, 0x0c, 0xf2, 0x22, 0x20, 0x00, 0x00, 0xff,
	0xff, 0x20, 0xd5, 0x46, 0x16, 0xf1, 0x00, 0x00, 0x00,
}
