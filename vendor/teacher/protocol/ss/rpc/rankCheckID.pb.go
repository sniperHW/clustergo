// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss/proto/rpc/rankCheckID.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RankCheckIDReq struct {
	RoleID               *uint64  `protobuf:"varint,1,req,name=roleID" json:"roleID,omitempty"`
	RankID               []uint32 `protobuf:"varint,2,rep,name=rankID" json:"rankID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RankCheckIDReq) Reset()         { *m = RankCheckIDReq{} }
func (m *RankCheckIDReq) String() string { return proto.CompactTextString(m) }
func (*RankCheckIDReq) ProtoMessage()    {}
func (*RankCheckIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b70ca71db6fbe672, []int{0}
}

func (m *RankCheckIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankCheckIDReq.Unmarshal(m, b)
}
func (m *RankCheckIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankCheckIDReq.Marshal(b, m, deterministic)
}
func (m *RankCheckIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankCheckIDReq.Merge(m, src)
}
func (m *RankCheckIDReq) XXX_Size() int {
	return xxx_messageInfo_RankCheckIDReq.Size(m)
}
func (m *RankCheckIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RankCheckIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_RankCheckIDReq proto.InternalMessageInfo

func (m *RankCheckIDReq) GetRoleID() uint64 {
	if m != nil && m.RoleID != nil {
		return *m.RoleID
	}
	return 0
}

func (m *RankCheckIDReq) GetRankID() []uint32 {
	if m != nil {
		return m.RankID
	}
	return nil
}

type RankCheckIdResult struct {
	RankID               *uint32  `protobuf:"varint,1,req,name=rankID" json:"rankID,omitempty"`
	Code                 *int32   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	RankIdx              *int32   `protobuf:"varint,3,opt,name=rankIdx" json:"rankIdx,omitempty"`
	RankPercent          *int32   `protobuf:"varint,4,opt,name=rankPercent" json:"rankPercent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RankCheckIdResult) Reset()         { *m = RankCheckIdResult{} }
func (m *RankCheckIdResult) String() string { return proto.CompactTextString(m) }
func (*RankCheckIdResult) ProtoMessage()    {}
func (*RankCheckIdResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b70ca71db6fbe672, []int{1}
}

func (m *RankCheckIdResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankCheckIdResult.Unmarshal(m, b)
}
func (m *RankCheckIdResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankCheckIdResult.Marshal(b, m, deterministic)
}
func (m *RankCheckIdResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankCheckIdResult.Merge(m, src)
}
func (m *RankCheckIdResult) XXX_Size() int {
	return xxx_messageInfo_RankCheckIdResult.Size(m)
}
func (m *RankCheckIdResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RankCheckIdResult.DiscardUnknown(m)
}

var xxx_messageInfo_RankCheckIdResult proto.InternalMessageInfo

func (m *RankCheckIdResult) GetRankID() uint32 {
	if m != nil && m.RankID != nil {
		return *m.RankID
	}
	return 0
}

func (m *RankCheckIdResult) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *RankCheckIdResult) GetRankIdx() int32 {
	if m != nil && m.RankIdx != nil {
		return *m.RankIdx
	}
	return 0
}

func (m *RankCheckIdResult) GetRankPercent() int32 {
	if m != nil && m.RankPercent != nil {
		return *m.RankPercent
	}
	return 0
}

type RankCheckIDResp struct {
	Ok                   *bool                `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Results              []*RankCheckIdResult `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RankCheckIDResp) Reset()         { *m = RankCheckIDResp{} }
func (m *RankCheckIDResp) String() string { return proto.CompactTextString(m) }
func (*RankCheckIDResp) ProtoMessage()    {}
func (*RankCheckIDResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b70ca71db6fbe672, []int{2}
}

func (m *RankCheckIDResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankCheckIDResp.Unmarshal(m, b)
}
func (m *RankCheckIDResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankCheckIDResp.Marshal(b, m, deterministic)
}
func (m *RankCheckIDResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankCheckIDResp.Merge(m, src)
}
func (m *RankCheckIDResp) XXX_Size() int {
	return xxx_messageInfo_RankCheckIDResp.Size(m)
}
func (m *RankCheckIDResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RankCheckIDResp.DiscardUnknown(m)
}

var xxx_messageInfo_RankCheckIDResp proto.InternalMessageInfo

func (m *RankCheckIDResp) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *RankCheckIDResp) GetResults() []*RankCheckIdResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*RankCheckIDReq)(nil), "rpc.rankCheckID_req")
	proto.RegisterType((*RankCheckIdResult)(nil), "rpc.rankCheckIdResult")
	proto.RegisterType((*RankCheckIDResp)(nil), "rpc.rankCheckID_resp")
}

func init() { proto.RegisterFile("ss/proto/rpc/rankCheckID.proto", fileDescriptor_b70ca71db6fbe672) }

var fileDescriptor_b70ca71db6fbe672 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x86, 0x69, 0x5a, 0x5d, 0x99, 0xc5, 0xaf, 0x1c, 0xd6, 0x78, 0x91, 0xd0, 0x53, 0x4f, 0xad,
	0xf8, 0x0f, 0xd4, 0x5e, 0x7a, 0x93, 0xe0, 0xc9, 0x8b, 0x94, 0x74, 0x60, 0x21, 0xa5, 0x89, 0x93,
	0x08, 0x82, 0x7f, 0x5e, 0x3a, 0x6e, 0xb5, 0xe2, 0x6d, 0xde, 0x0f, 0x86, 0x87, 0x17, 0x6e, 0x62,
	0x6c, 0x02, 0xf9, 0xe4, 0x1b, 0x0a, 0xb6, 0xa1, 0x7e, 0x72, 0x8f, 0x7b, 0xb4, 0xae, 0x6b, 0x6b,
	0x76, 0x65, 0x4e, 0xc1, 0x96, 0xf7, 0x70, 0xbe, 0x4a, 0x5e, 0x09, 0xdf, 0xe4, 0x0e, 0x8e, 0xc9,
	0x8f, 0xd8, 0xb5, 0x2a, 0xd3, 0xa2, 0x2a, 0xcc, 0x41, 0xb1, 0xdf, 0x4f, 0xae, 0x6b, 0x95, 0xd0,
	0x79, 0x75, 0x6a, 0x0e, 0xaa, 0xfc, 0x84, 0xcb, 0xdf, 0x17, 0x83, 0xc1, 0xf8, 0x3e, 0xa6, 0x55,
	0x79, 0x7e, 0xf2, 0x53, 0x96, 0x12, 0x0a, 0xeb, 0x07, 0x54, 0x42, 0x67, 0xd5, 0x91, 0xe1, 0x5b,
	0x2a, 0xd8, 0x70, 0x3a, 0x7c, 0xa8, 0x9c, 0xed, 0x45, 0x4a, 0x0d, 0xdb, 0xf9, 0x7c, 0x42, 0xb2,
	0x38, 0x25, 0x55, 0x70, 0xba, 0xb6, 0xca, 0x67, 0xb8, 0xf8, 0xcb, 0x1f, 0x83, 0x3c, 0x03, 0xe1,
	0x9d, 0xca, 0x74, 0x56, 0x9d, 0x18, 0xe1, 0x9d, 0xbc, 0x85, 0x0d, 0x31, 0x55, 0x64, 0xf2, 0xed,
	0xdd, 0xae, 0xa6, 0x60, 0xeb, 0x7f, 0xd0, 0x66, 0xa9, 0x3d, 0x5c, 0xbf, 0x5c, 0x25, 0xec, 0xed,
	0x1e, 0xe9, 0x7b, 0x41, 0xeb, 0xc7, 0x26, 0xc6, 0x79, 0xc7, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xcf, 0xd0, 0x7d, 0x6d, 0x56, 0x01, 0x00, 0x00,
}
