// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss/proto/ssmessage/common.proto

package ssmessage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LevelType int32

const (
	LevelType_SCENARIO        LevelType = 1
	LevelType_SCENARIO_BATTLE LevelType = 2
	LevelType_HISTORY         LevelType = 3
	LevelType_LEGEND          LevelType = 4
	LevelType_OTHER           LevelType = 5
)

var LevelType_name = map[int32]string{
	1: "SCENARIO",
	2: "SCENARIO_BATTLE",
	3: "HISTORY",
	4: "LEGEND",
	5: "OTHER",
}

var LevelType_value = map[string]int32{
	"SCENARIO":        1,
	"SCENARIO_BATTLE": 2,
	"HISTORY":         3,
	"LEGEND":          4,
	"OTHER":           5,
}

func (x LevelType) Enum() *LevelType {
	p := new(LevelType)
	*p = x
	return p
}

func (x LevelType) String() string {
	return proto.EnumName(LevelType_name, int32(x))
}

func (x *LevelType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LevelType_value, data, "LevelType")
	if err != nil {
		return err
	}
	*x = LevelType(value)
	return nil
}

func (LevelType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_64bf5073e77a1df6, []int{0}
}

func init() {
	proto.RegisterEnum("ssmessage.LevelType", LevelType_name, LevelType_value)
}

func init() { proto.RegisterFile("ss/proto/ssmessage/common.proto", fileDescriptor_64bf5073e77a1df6) }

var fileDescriptor_64bf5073e77a1df6 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x2e, 0xce, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x4f,
	0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0xd3, 0x03, 0x0b, 0x0b, 0x71, 0xc2, 0xc5, 0xb5, 0x82, 0xb8, 0x38,
	0x7d, 0x52, 0xcb, 0x52, 0x73, 0x42, 0x2a, 0x0b, 0x52, 0x85, 0x78, 0xb8, 0x38, 0x82, 0x9d, 0x5d,
	0xfd, 0x1c, 0x83, 0x3c, 0xfd, 0x05, 0x18, 0x85, 0x84, 0xb9, 0xf8, 0x61, 0xbc, 0x78, 0x27, 0xc7,
	0x90, 0x10, 0x1f, 0x57, 0x01, 0x26, 0x21, 0x6e, 0x2e, 0x76, 0x0f, 0xcf, 0xe0, 0x10, 0xff, 0xa0,
	0x48, 0x01, 0x66, 0x21, 0x2e, 0x2e, 0x36, 0x1f, 0x57, 0x77, 0x57, 0x3f, 0x17, 0x01, 0x16, 0x21,
	0x4e, 0x2e, 0x56, 0xff, 0x10, 0x0f, 0xd7, 0x20, 0x01, 0x56, 0x27, 0xf9, 0x28, 0xd9, 0x92, 0xd4,
	0xc4, 0xe4, 0x8c, 0xd4, 0x22, 0x88, 0x33, 0x92, 0xf3, 0x73, 0xf4, 0x8b, 0x8b, 0x11, 0x8e, 0x01,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x81, 0xe1, 0x50, 0x98, 0xa1, 0x00, 0x00, 0x00,
}
